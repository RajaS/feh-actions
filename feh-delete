#!/usr/bin/env python

import os, sys
import shutil

args = sys.argv
trash_dir = '/data/tmp/trash'   # modify as reqd
log_file = os.path.join(trash_dir, 'trash.log')

if len(args) == 1:
    print('Please specify filename')
    sys.exit()

# make trash dir if reqd
if not os.path.exists(trash_dir):
    os.makedirs(trash_dir)


def move_file(old_path, new_path):
    """
    Simplest is os.rename, but fails when the mount points are different (with external drive)
    shutil.move may or may not have same problems
    so instead combine shutil.copy and then os.remove
    ref: https://stackoverflow.com/questions/42392600/oserror-errno-18-invalid-cross-device-link
    """
    shutil.copy(old_path, new_path)
    os.remove(old_path)
    add_log_entry(old_path, new_path)
    return


def add_log_entry(old_path, new_path):
    """
    Add entry to log file with old and new paths
    delete old entries so only 5 entries are retained
    """
    with open(log_file, 'r+') as f:
        # Read all lines from the file
        lines = f.readlines()

        # Check if there are more than 5 lines and remove the top entries
        if len(lines) > 5:
            lines = lines[1:]

        # Move the file pointer to the beginning of the file to overwrite
        f.seek(0)
        f.truncate()  # This is important to clear the existing content

        # Rewrite the remaining lines back to the file
        f.writelines(lines)

        # Add a new entry at the bottom of the file
        f.write(old_path + ',' + new_path + '\n')
        
    return


jpg_file = args[1]

# canon raw
canon_raw = os.path.splitext(jpg_file)[0] + '.CR2'

# fuji raw
fuji_raw = os.path.splitext(jpg_file)[0] + '.RAF'

# move to trash
move_file(jpg_file,
          os.path.join(trash_dir, os.path.basename(jpg_file)))

if os.path.exists(canon_raw):
    move_file(canon_raw,
              os.path.join(trash_dir, os.path.basename(canon_raw)))

if os.path.exists(fuji_raw):
    move_file(fuji_raw,
              os.path.join(trash_dir, os.path.basename(fuji_raw)))

sys.exit()
